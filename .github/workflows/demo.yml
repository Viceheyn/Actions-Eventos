name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}} #esto se usa para recuperar el cached e indicar si debe ser descartado
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-files}} #este nombre puede ser cualquier cosa y no tiene que ser identico al de abajo
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-files={}' >> $GITHUB_OUTPUT ';' #script-file es el nombre que elegi yo, todo entre las comillas puede ser lo que sea

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
            # | #esto es para multiples paths
            # dist
            # package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: get build artefacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files #aqui toma el artefacto de arriba y lo decomprime, asi queda guardado dentro
      - name: Output content
        run: ls
      - name: Output Filename
        run: echo "${{ needs.build.outputs.script-file }}"  #esto permite usar un job dentro de otro job; needs permite llamar los valores de otro job
      - name: Deploy
        run: echo "Deploying..."
        #aqui se podrian subir los artefactos usando actions y un webserver
